---
// Import the EnhancedImage component
import EnhancedImage from "@components/ui/EnhancedImage.astro";

// Destructure the component properties from Astro.props
const { id, aria, src, alt, first, second } = Astro.props;

// Define TypeScript interface for the properties
interface Props {
  id: string;
  aria: string;
  src?: any;
  alt: string;
  first?: boolean;
  second?: boolean;
}
// Set class based on 'first' property
// If 'first' is present, show the tab content immediately
const firstClass = first ? "" : "hidden";

// Determine variant and additional classes based on 'second' property
const variant = second ? "tabSecond" : "tab";
const additionalClass = second 
  ? "aspect-5/4 p-3 lg:aspect-auto" 
  : "aspect-3/2 lg:aspect-auto";

/*
first: This property should be set to true for the initial TabContent component
in your list to ensure that it's visible when the page first loads.
All subsequent TabContent components should omit this property or set it to false.

second: This property allows to control changes in the look of the Image.
If it is set to true, the Image will have different aspect ratio and background color.
If this property is not provided or is set to false, the Image will use default styling.
You can enable this for any TabContent component you want to apply these changes to.

This is the full example:
<TabContent id="" aria="" src="" alt="" first={true}/>
<TabContent id="" aria="" src="" alt="" second={true}/>
<TabContent id="" aria="" src="" alt="" />
*/
---

<!-- Container for tab content that controls visibility and accessibility -->
<div id={id} role="tabpanel" class={firstClass} aria-labelledby={aria}>
  <!-- Enhanced Image component to display the image with dynamic classes based on the 'second' property -->
  <EnhancedImage
    src={src}
    alt={alt}
    variant={variant}
    class={`object-cover ${additionalClass}`}
    draggable="false"
    format="webp"
    loading="eager"
  />
</div>
